---
# Install and provision an SD card on localhost (before first boot.)
- name: Provision SD card before initial boot
  hosts: localhost
  connection: local 
  tasks:

# Build a list of mounted partitions and unmount if found
  - name: build list of mounted partitions
    shell: "df 2>/dev/null|grep {{ssd_dev}}|awk '{print $1}'"
    register: "partitions"

  - name: list mounted partitions
    debug: var=partitions.stdout_lines

  - name: unmount partitions
    become: yes
    shell: "umount {{ item }}"
    with_items: "{{ partitions.stdout_lines }}"

# execute blkdiscard if the image name is provided
  - name: erase SSD (blkdiscard)
    become: yes
    shell: "blkdiscard -f {{ssd_dev}}"
    when: os_image is defined

# copy OS image
  - name: copy OS image
    become: yes
    shell: "xzcat {{os_image}} > {{ssd_dev}}"
    when: os_image is defined

  - name: probe partitions
    become: yes
    shell: "partprobe {{ ssd_dev }}"

# Extend the 2nd (root) partition.
  - name: Read device information (always use unit when probing) (doesn't work)
    become: yes
    community.general.parted: device="{{ ssd_dev }}" unit=MiB
    register: ssd_info

  - name: show partition info
    debug: var=ssd_info.stdout_lines

  - name: Extend root partition (2nd)
    become: yes
    community.general.parted:
      device: "{{ ssd_dev }}"
      number: 2
      part_end: "30GiB"
      resize: true
      state: present

  - name: Resize EXT4 filesystem
    become: yes
    shell: "e2fsck -p -f {{ ssd_dev }}2 && resize2fs {{ ssd_dev }}2"

  - name: Create partition for ZFS (3rd)
    become: yes
    parted:
      device: "{{ ssd_dev }}"
      number: 3
      part_start: 62914560s
      part_end: -1s
      state: present

# Create ZFS pool  (Requires ZFS tools on the host)
  - name: ID ZFS partition
    shell: "ls -l /dev/disk/by-id|grep $(basename {{ssd_dev}})3| awk '{print $9}'"
    register: ZFS_part

  - name: show ZFS partition
    debug: var=ZFS_part.stdout_lines

  - name: create pool # probably not idempotent
    become: yes
    command: |
      zpool create -f -o ashift=12 
        -O acltype=posixacl -O canmount=off -O compression=lz4
        -O dnodesize=auto -O normalization=formD -O relatime=on -O xattr=sa
        -O mountpoint=/mnt -R /mnt/"{{poolname}}"
        "{{poolname}}" /dev/disk/by-id/"{{ZFS_part.stdout_lines.0}}"

  - name: export pool
    become: yes
    command: zpool export "{{poolname}}" 

# change host name

  - name: create root partition mount point
    become: yes
    file:
      path: /mnt/RASPIROOT 
      state: directory


  - name: mount new root partition
    become: yes
    command: "mount {{ssd_dev}}2 /mnt/RASPIROOT"

  - name: change hostname in /etc/hosts
    become: yes
    shell: "echo  {{new_host_name}} >/mnt/RASPIROOT/etc/hostname"

  - name: unmount root partition
    become: yes
    command: "umount /mnt/RASPIROOT"
